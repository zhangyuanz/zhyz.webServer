需求分析

1引言
(1)编写目标：
在学习了代码规范以及简单优化之后，为了更进一步的提高，实现一个轻量级的、只处理静态文件的web服务器，从而学习掌握http协议、socket开发、多线程等技术。
我们都知道Tomcat，它是一个J2ee规范的参考实现，我们这里要做的这个服务器只需要处理静态文件即可，不支持servlet、jsp、java等动态内容，我们要做到和apache服务器的最基本的功能一致就行了
 (2)开发规范：
首先代码要简洁明了，注释规范，并要学会使用slf4输入调试日志，最后还要使用Juint编写高覆盖率的自测试用例
（3）基础知识：
http协议基础知识，网络编程Socket程序开发知识，java多线程开发基础以及接口的设计，另外要掌握线程池对象、NIO对象、java.util.concurrent.*下相关对象的使用，同时对apache commons相关工具包要熟悉，尤其是httpClient。
2系统说明
(1)	运行要求：
在eclipse 环境下编写代码，并使用juint测试，以本机localhost作为服务器,eclipse控制台作为用户界面
(2)操作说明：
首先启动服务器程序，监听相应端口，然后启动客服端程序，监控控制台用户的输入命令，例如：  
输入http://localhost/d/a/b.txt回车，如果是静态文件，则向服务器发出http的请求，如果是get请求，则服务器程序将打开d盘下a目录下的b.txt文件，并将内容返回给客服端，客服端程序再将其打印在控制台给用户
输入http://localhost/d/a回车，如果是目录，则服务器程序将d盘下目录a下的所有文件列表返回到客服端，客服端程序将其输出到控制台给用户 
输入exit回车，则等待已有任务运行完毕后，关闭资源，退出客服端程序(3)功能需求：
 1）客服端程序：通过socket创建和服务器的相应端口的连接，并让keep-alive设置为true，根据控制台用户的输入，发出http请求到服务器，等待服务器的返回信息，将其打印在控制台给用户，如果超时，在控制台打印
“超时”如果用户输入exit，则待没有打印任务结束后关闭资源，退出程序。

 2）服务器程序：监听相应端口的连接请求，如果get方法的请求（否则抛出异常），判断是否D盘，如果不是返回“无权访问”，如果是D盘，判断是不是目录，如果是目录，返回该目录下 的所有文件的列表，如果是文件，判断是否是静态文件，如果是返回文件内容，否则返回“请求错误”，服务器程序要先手动启动，保持运行

3功能模块
（1）	数据流程图
 
（2）	程序流程图
（3）	功能模块图
4相关编码实现要求
•  只处理http的get请求方法，post或其他方法可以直接抛出异常
•  需要处理http协议中的keep-alive设置，尽量在一个socket连接中返回多个文件的内容
•  使用jdk1.5提供的线程池对象、NIO对象、java.util.concurrent.*下的 相关对象，通用的工具函数可以使用apache commons相关工具包
•  通过web服务器能访问d盘下的所有文件
•  编码完成后自我测试，使用JUint编写详细的，尽可能覆盖全面的测试用例，•  编码过程中调试使用slf4输入调试日志
